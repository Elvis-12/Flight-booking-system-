/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

//import Dao.PassengerDAO;
import Model.Passangers;
//import Model.Passenger;
import Service.PassangersService;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class SearchPssngr extends javax.swing.JInternalFrame {

    /**
     * Creates new form SearchPssngr
     */
    public SearchPssngr() {
        initComponents();
        allPassengersRetrived();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        firstnametxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lastnametxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        passporttxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        emailtxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        contacttxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        dobtxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        searchtxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        allpassengers = new javax.swing.JTable();
        updatebtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1366, 786));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 102, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(691, 822));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("First Name: ");

        firstnametxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Last Name:");

        lastnametxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Passport No:");

        passporttxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Email:");

        emailtxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Date Of Birth:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Contact:");

        contacttxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Gender:");

        male.setText("Male");

        female.setText("Female");

        dobtxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Search Passengers");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(160, 160, 160)
                            .addComponent(emailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(59, 59, 59)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(contacttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(male)
                                            .addGap(34, 34, 34)
                                            .addComponent(female))
                                        .addComponent(dobtxt)))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(18, 18, 18)
                                            .addComponent(firstnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel4))
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addGap(13, 13, 13)
                                                    .addComponent(lastnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(passporttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGap(0, 0, Short.MAX_VALUE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jLabel8)))
                .addContainerGap(205, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(firstnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lastnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passporttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(emailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dobtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(male)
                    .addComponent(female))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(contacttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(159, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(691, 822));

        searchtxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153), 2));

        searchBtn.setBackground(new java.awt.Color(0, 102, 204));
        searchBtn.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        allpassengers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "passenger_id", "First Name", "Last Name", "Passport No", "Email", "DOB", "Gender", "Contact"
            }
        ));
        allpassengers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allpassengersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(allpassengers);

        updatebtn.setBackground(new java.awt.Color(0, 102, 204));
        updatebtn.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(255, 255, 255));
        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(0, 102, 204));
        deleteBtn.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        back.setBackground(new java.awt.Color(0, 102, 204));
        back.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        back.setForeground(new java.awt.Color(255, 255, 255));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        DefaultTableModel tbModel = (DefaultTableModel) allpassengers.getModel(); 
        if (searchtxt.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Search can't be Empty");
        } else {
            try {
//                PassengerDAO pssdao = new PassengerDAO();
                int theId = Integer.parseInt(searchtxt.getText());
//               
            Passangers pss = new Passangers();
            pss.setPassenger_id(theId);
            Registry reg = LocateRegistry.getRegistry("127.0.0.1",6000);
            PassangersService service = (PassangersService) reg.lookup("Passangers");
            Passangers passanger = service.findPassangers(pss);
            if(passanger != null){
            tbModel.setRowCount(0);
            Integer id = passanger.getPassenger_id();
            String first_name = passanger.getFirst_name();
            String last_name = passanger.getLast_name();
            String passport_nbr = passanger.getPassport_nbr();
            String email = passanger.getEmail();
            String DOB = passanger.getDOB();
            String gender = passanger.getGender();
            String contact = passanger.getContact();
            
            tbModel.addRow(new Object[]{
            id , first_name,last_name,passport_nbr,email,DOB,gender,contact
            });
            }else {
            JOptionPane.showMessageDialog(this,"No Result");
            }
            } catch (Exception e) {
                e.printStackTrace();
            }
//            PassengerDAO pssdao = new PassengerDAO();
//            ResultSet rs = pssdao.allPassengers();
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void allpassengersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allpassengersMouseClicked
        // TODO add your handling code here:
        int selectedRow = allpassengers.getSelectedRow();
        DefaultTableModel tbModel = (DefaultTableModel) allpassengers.getModel();
        firstnametxt.setText(tbModel.getValueAt(selectedRow, 1).toString());
        lastnametxt.setText(tbModel.getValueAt(selectedRow, 2).toString());
        passporttxt.setText(tbModel.getValueAt(selectedRow, 3).toString());
        emailtxt.setText(tbModel.getValueAt(selectedRow, 4).toString());
        dobtxt.setText(tbModel.getValueAt(selectedRow, 5).toString());
        String gender = tbModel.getValueAt(selectedRow, 6).toString();
        if (gender.equals("Male")) {
            male.setSelected(true);
        } else if (gender.equals("Female")) {
            female.setSelected(true);
        }
        contacttxt.setText(tbModel.getValueAt(selectedRow, 7).toString());

    }//GEN-LAST:event_allpassengersMouseClicked

    private void allPassengersRetrived() {

//        PassengerDAO pssdao = new PassengerDAO();
//        ResultSet rs = pssdao.allPassengers();
         
       
        try {
              Registry reg = LocateRegistry.getRegistry("127.0.0.1",6000);
            PassangersService service = (PassangersService)reg.lookup("Passangers");
            List<Passangers> passangers = service.allPassangers();
            
            DefaultTableModel tbModel = (DefaultTableModel) allpassengers.getModel();
        tbModel.setRowCount(0);
        
        for(Passangers passanger : passangers){
        Integer id = passanger.getPassenger_id();
            String first_name = passanger.getFirst_name();
            String last_name = passanger.getLast_name();
            String passport_nbr = passanger.getPassport_nbr();
            String email = passanger.getEmail();
            String DOB = passanger.getDOB();
            String gender = passanger.getGender();
            String contact = passanger.getContact();

 tbModel.addRow(new Object[]{
            id , first_name,last_name,passport_nbr,email,DOB,gender,contact
            });
        }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        if (firstnametxt.getText().trim().isEmpty() || firstnametxt.getText().length() <= 4) {
            JOptionPane.showMessageDialog(this, "First Name not Valid");
        } else if (lastnametxt.getText().trim().isEmpty() || lastnametxt.getText().length() <= 4) {
            JOptionPane.showMessageDialog(this, "Last Name not Valid");
        } else if (emailtxt.getText().equals("") || !isValidEmail(emailtxt.getText())) {
            JOptionPane.showMessageDialog(this, "Email is not valid");
        } else if (contacttxt.getText().trim().isEmpty() || contacttxt.getText().length() == 10) {
            JOptionPane.showMessageDialog(this, "Contact is not valid");
        } else if (dobtxt.getText().trim().isEmpty() || !dobtxt.getText().matches("^\\d{2}/(\\d{2})?/\\d{4}$")) {
            JOptionPane.showMessageDialog(this, "DOB is not valid");
        } else {
            int selectedRow = allpassengers.getSelectedRow();
            DefaultTableModel tbModel = (DefaultTableModel) allpassengers.getModel();
            int theId = Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString());
//            Passangers passenger = new Passangers();
            Passangers pss = new Passangers();
            pss.setPassenger_id(theId);
            pss.setFirst_name(firstnametxt.getText());
            pss.setLast_name(lastnametxt.getText());
            pss.setPassport_nbr(passporttxt.getText());
            pss.setEmail(emailtxt.getText());
            pss.setDOB(dobtxt.getText());
            pss.setContact(contacttxt.getText());
            String gender;
            if (male.isSelected()) {
                gender = "Male";
            } else if (female.isSelected()) {
                gender = "Female";
            } else {
                gender = "Other";
            }
            pss.setGender(gender);

//            
           try {
                Registry reg = LocateRegistry.getRegistry("127.0.0.1", 6000);
                PassangersService service = (PassangersService) reg.lookup("Passangers");
                Passangers passanger =service.updatePassangers(pss);
                 if (passanger!= null) {
                JOptionPane.showMessageDialog(this, "Passenger Updated!");
                firstnametxt.setText("");
                lastnametxt.setText("");
                passporttxt.setText("");
                emailtxt.setText("");
                dobtxt.setText("");
                contacttxt.setText("");
                allPassengersRetrived();
            } else {
                JOptionPane.showMessageDialog(this, "Passenger Not Updated!");
            }
            } catch (Exception e) {
                e.printStackTrace();
            }

           
        }
    }//GEN-LAST:event_updatebtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int choice = JOptionPane.showConfirmDialog(null, "Are u sure To delete", "confirm", JOptionPane.YES_NO_OPTION);

        if (choice == JOptionPane.YES_NO_OPTION) {

            int selectedRow = allpassengers.getSelectedRow();
            DefaultTableModel tbModel = (DefaultTableModel) allpassengers.getModel();
            int theId = Integer.parseInt(tbModel.getValueAt(selectedRow, 0).toString());

//            PassengerDAO dao = new PassengerDAO();
//            Integer rowAffected = dao.deletepassengers(theId);
            try {
                
                Passangers pss = new Passangers();
                pss.setPassenger_id(theId);
                Registry reg = LocateRegistry.getRegistry("127.0.0.1", 6000);
                PassangersService service = (PassangersService)reg.lookup("Passangers");
                Passangers passanger = service.deletePassangers(pss);
                if (passanger!= null) {
                JOptionPane.showMessageDialog(this, "passenger Deleted!");
                firstnametxt.setText("");
                lastnametxt.setText("");
                passporttxt.setText("");
                emailtxt.setText("");
                dobtxt.setText("");
                contacttxt.setText("");
                allPassengersRetrived();
            } else {
                JOptionPane.showMessageDialog(this, "Passenger Not Deleted because of foreign key reference!");
            }
            } catch (Exception e) {
                e.printStackTrace();
            }

            
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.hide();
    }//GEN-LAST:event_backActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddPassanger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddPassanger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddPassanger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddPassanger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchPssngr().setVisible(true);
            }
        });
    }

    public static boolean isValidEmail(String email) {
        String regex = "^[\\w!#$%&'*+/=?^`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?$";
        return Pattern.matches(regex, email);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allpassengers;
    private javax.swing.JButton back;
    private javax.swing.JTextField contacttxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField dobtxt;
    private javax.swing.JTextField emailtxt;
    private javax.swing.JRadioButton female;
    private javax.swing.JTextField firstnametxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastnametxt;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField passporttxt;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
